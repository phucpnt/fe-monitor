{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "E:\\phucpnt\\projects\\sentifi-fe-monitor\\src\\client\\console.js",
    "E:\\phucpnt\\projects\\sentifi-fe-monitor\\src\\client\\trackByBeaconImage.js",
    "E:\\phucpnt\\projects\\sentifi-fe-monitor\\src\\client\\trackByBrowserConsole.js",
    "E:\\phucpnt\\projects\\sentifi-fe-monitor\\src\\client\\util.js",
    "E:\\phucpnt\\projects\\sentifi-fe-monitor\\src\\shared\\constant.js"
  ],
  "names": [],
  "mappings": "AAAA;uFCkBe,QAAS,YAAT,MACb,GAAA,EAAA,SACA,WAAA,EAAA,SAAA,GAAa,EAAA,MACb,UAAA,EAAA,SAAA,GAAY,EAAA,MACZ,SAGI,GAHJ,SAAA,EAAA,UAAA,SAAA,KAII,IAAY,EAAU,MAAK,EAAA,wBAAA,eAC3B,GAAW,EAAU,MAAK,EAAA,qBAAA,aAAqB,KAAA,IAEnD,IAAM,GAAQ,EAAU,OAAO,SAAC,EAAM,SAAU,GAAM,IAAO,KAE7D,QACE,MAAO,EAAM,KAAK,OAAX,UAAA,WACP,KAAM,EAAM,KAAK,OAAX,UAAA,UACN,KAAM,EAAM,KAAK,OAAX,UAAA,UACN,MAAO,EAAM,KAAK,OAAX,UAAA,qFAjBa;;;YCdxB,SAAS,qBAAoB,GAC3B,GAAM,GAAW,SAAS,cAAc,MACxC,GAAS,MAAQ,EACjB,EAAS,OAAS,EAClB,EAAS,IAAM,EAEf,SAAS,KAAK,YAAY,yGAGb,SAAC,SAAW,UAAC,SAAS,UAAC,EAAO,8BAAY,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,uBACvD,IAAM,IAAY,EAAO,KAAM,SAAS,KAAK,IACvC,GAAa,EAAA,MAAA,iBAAgB,EAAO,GACpC,EAAiB,EAAA,IAAY,CACnC,qBAAoB,GAChB,GAAM,EAAA,MAAA,QAAK,EAAO,GAAA,OAAY;;;YCbpC,SAAS,iBACP,MAA8B,kBAAnB,QAAO,QAChB,MAAA,UAGK,SAAC,EAAO,8BAAY,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,6BACzB,QAAO,QAAQ,KAAU,EAAA,OAAO,SAAQ,GAAf,MAAA,GAAsB,GAAA,OAAY,2GAIhD,SAAC,SAAW,UAAC,GAE1B,GAAM,GAAW,eAEjB,OAAO,UAAC,EAAO,8BAAY,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,uBACzB,GAAA,MAAA,QAAS,EAAO,GAAA,OAAY,IACxB,GAAM,EAAA,MAAA,QAAK,EAAO,GAAA,OAAY;;;YCZ/B,SAAS,iBAAgB,EAAO,MAAS,GAAA,UAAA,QAAA,GAAA,SAAA,UAAA,GAAO,EAAI,OAAJ,UAAA,GACjD,KAAiB,OAAH,UAAA,YAAA,IACE,EADF,UAAA,kBAAA,IAEQ,EAFR,UAAA,cAAA,IAGI,EAGtB,OAAO,WAAU,EAAY,KAAK,8FAPpB,gBAAA,4DAFH,UAAA,QAAA,UAAY;;;mECPlB,IAAM,UAAA,QAAA,SAAW,OACX,UAAA,QAAA,UAAY,QACZ,SAAA,QAAA,SAAW,OACX,UAAA,QAAA,UAAY,QAEZ,YAAA,QAAA,YAAc,IACd,WAAA,QAAA,WAAa,IACb,cAAA,QAAA,cAAgB,IAChB,kBAAA,QAAA,kBAAoB",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import {\r\n  LOG_INFO,\r\n  LOG_DEBUG,\r\n  LOG_WARN,\r\n  LOG_ERROR,\r\n  PARAM_LEVEL,\r\n  PARAM_MESSAGE,\r\n  PARAM_SCRIPT_TIME,\r\n  PARAM_TYPE,\r\n} from '../shared/constant';\r\nimport {\r\n  emptyFunc\r\n} from './util';\r\n\r\n// log layers\r\nimport trackByBeaconImage from './trackByBeaconImage';\r\nimport trackByBrowserConsle from './trackByBrowserConsole';\r\n\r\nexport default function makeLogger({\r\n  host,\r\n  useConsole = true,\r\n  useBeacon = true,\r\n  logLevel = LOG_INFO\r\n}) {\r\n\r\n  let logLayers = [];\r\n  if (useConsole) logLayers.push(trackByBrowserConsle());\r\n  if (useBeacon) logLayers.push(trackByBeaconImage({ host }));\r\n\r\n  const doLog = logLayers.reduce((next, logFn) => logFn(next), null);\r\n\r\n  return {\r\n    debug: doLog.bind(undefined, LOG_DEBUG),\r\n    info: doLog.bind(undefined, LOG_INFO),\r\n    warn: doLog.bind(undefined, LOG_WARN),\r\n    error: doLog.bind(undefined, LOG_WARN),\r\n  };\r\n}\r\n",
    "import {\r\n  buildTrackQuery\r\n} from './util';\r\n\r\nfunction createTrackingImage(url) {\r\n  const trackImg = document.createElement('img');\r\n  trackImg.width = 1;\r\n  trackImg.height = 1;\r\n  trackImg.src = url;\r\n\r\n  document.body.appendChild(trackImg);\r\n}\r\n\r\nexport default (config) => (next) => (level, message, ...args) => {\r\n  const trackUrl = [config.host, 'i.gif'].join('');\r\n  const trackQuery = buildTrackQuery(level, message);\r\n  const trackImgUrl = `${trackUrl}?${trackQuery}`;\r\n  createTrackingImage(trackImgUrl);\r\n  if (next) next(level, message, ...args);\r\n};\r\n",
    "import {\r\n  buildTrackQuery,\r\n  emptyFunc,\r\n} from './util';\r\n\r\nfunction getLogBrowser() {\r\n  if (typeof window.console !== 'function') {\r\n    return emptyFunc;\r\n  }\r\n\r\n  return (level, message, ...args) => {\r\n    window.console[level] && window.console[level](message, ...args);\r\n  }\r\n}\r\n\r\nexport default (config) => (next) => {\r\n\r\n  const _console = getLogBrowser();\r\n\r\n  return (level, message, ...args) => {\r\n    _console(level, message, ...args);\r\n    if (next) next(level, message, ...args);\r\n  };\r\n};\r\n",
    "import {\r\n  PARAM_LEVEL,\r\n  PARAM_MESSAGE,\r\n  PARAM_SCRIPT_TIME,\r\n  PARAM_TYPE,\r\n} from '../shared/constant';\r\n\r\nexport const emptyFunc = () => {/* do nothing */};\r\n\r\nexport function buildTrackQuery(level, message, time = 1 * Date()) {\r\n  let queryParams = [].concat(\r\n    `${PARAM_LEVEL}=${level}`,\r\n    `${PARAM_SCRIPT_TIME}=${time}`,\r\n    `${PARAM_MESSAGE}=${message}`\r\n  );\r\n\r\n  return encodeURI(queryParams.join('&'));\r\n}\r\n",
    "export const LOG_INFO = 'info';\r\nexport const LOG_DEBUG = 'debug';\r\nexport const LOG_WARN = 'warn';\r\nexport const LOG_ERROR = 'error';\r\n\r\nexport const PARAM_LEVEL = 'l';\r\nexport const PARAM_TYPE = 't';\r\nexport const PARAM_MESSAGE = 'm';\r\nexport const PARAM_SCRIPT_TIME = 'tm';\r\n"
  ]
}